{"ast":null,"code":"import * as Yup from 'yup';\nexport const validationSchema = Yup.object({\n  username: Yup.string().required('Required field').min(4, 'Minimum 4 characters').max(10, 'Maximum 10 characters').matches(/^[0-9a-z]+$/, 'Invalid characters'),\n  name: Yup.string().required('Required field').min(2, 'Minimum 2 characters').max(15, 'Maximum 15 characters').matches(/^[a-zA-Z]+$/, 'Invalid characters'),\n  surname: Yup.string().required('Required field').min(2, 'Minimum 2 characters').max(15, 'Maximum 15 characters').matches(/^[a-zA-Z]+$/, 'Invalid characters'),\n  birth: Yup.date().required('Required field'),\n  city: Yup.string().required('Required field').min(2, 'Minimum 2 characters').max(15, 'Maximum 15 characters').matches(/^[a-zA-Z]+$/, 'Invalid characters'),\n  file: Yup.string().required('Required field'),\n  password: Yup.string().required('Required field').min(6, 'Minimum 6 characters').max(15, 'Maximum 15 characters').matches(/^[a-zA-Z0-9]+$/, 'Invalid characters')\n});","map":{"version":3,"names":["Yup","validationSchema","object","username","string","required","min","max","matches","name","surname","birth","date","city","file","password"],"sources":["E:/Uprojects/Codenk/Social-Network-main/client/src/utils/forms/register-form.ts"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object({\n   username: Yup.string()\n      .required('Required field')\n      .min(4, 'Minimum 4 characters')\n      .max(10, 'Maximum 10 characters')\n      .matches(/^[0-9a-z]+$/, 'Invalid characters'),\n   name: Yup.string()\n      .required('Required field')\n      .min(2, 'Minimum 2 characters')\n      .max(15, 'Maximum 15 characters')\n      .matches(/^[a-zA-Z]+$/, 'Invalid characters'),\n   surname: Yup.string()\n      .required('Required field')\n      .min(2, 'Minimum 2 characters')\n      .max(15, 'Maximum 15 characters')\n      .matches(/^[a-zA-Z]+$/, 'Invalid characters'),\n   birth: Yup.date()\n      .required('Required field'),\n   city: Yup.string()\n      .required('Required field')\n      .min(2, 'Minimum 2 characters')\n      .max(15, 'Maximum 15 characters')\n      .matches(/^[a-zA-Z]+$/, 'Invalid characters'),\n   file: Yup.string()\n      .required('Required field'),\n   password: Yup.string()\n      .required('Required field')\n      .min(6, 'Minimum 6 characters')\n      .max(15, 'Maximum 15 characters')\n      .matches(/^[a-zA-Z0-9]+$/, 'Invalid characters'),\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,CAAW;EACxCC,QAAQ,EAAEH,GAAG,CAACI,MAAJ,GACNC,QADM,CACG,gBADH,EAENC,GAFM,CAEF,CAFE,EAEC,sBAFD,EAGNC,GAHM,CAGF,EAHE,EAGE,uBAHF,EAINC,OAJM,CAIE,aAJF,EAIiB,oBAJjB,CAD8B;EAMxCC,IAAI,EAAET,GAAG,CAACI,MAAJ,GACFC,QADE,CACO,gBADP,EAEFC,GAFE,CAEE,CAFF,EAEK,sBAFL,EAGFC,GAHE,CAGE,EAHF,EAGM,uBAHN,EAIFC,OAJE,CAIM,aAJN,EAIqB,oBAJrB,CANkC;EAWxCE,OAAO,EAAEV,GAAG,CAACI,MAAJ,GACLC,QADK,CACI,gBADJ,EAELC,GAFK,CAED,CAFC,EAEE,sBAFF,EAGLC,GAHK,CAGD,EAHC,EAGG,uBAHH,EAILC,OAJK,CAIG,aAJH,EAIkB,oBAJlB,CAX+B;EAgBxCG,KAAK,EAAEX,GAAG,CAACY,IAAJ,GACHP,QADG,CACM,gBADN,CAhBiC;EAkBxCQ,IAAI,EAAEb,GAAG,CAACI,MAAJ,GACFC,QADE,CACO,gBADP,EAEFC,GAFE,CAEE,CAFF,EAEK,sBAFL,EAGFC,GAHE,CAGE,EAHF,EAGM,uBAHN,EAIFC,OAJE,CAIM,aAJN,EAIqB,oBAJrB,CAlBkC;EAuBxCM,IAAI,EAAEd,GAAG,CAACI,MAAJ,GACFC,QADE,CACO,gBADP,CAvBkC;EAyBxCU,QAAQ,EAAEf,GAAG,CAACI,MAAJ,GACNC,QADM,CACG,gBADH,EAENC,GAFM,CAEF,CAFE,EAEC,sBAFD,EAGNC,GAHM,CAGF,EAHE,EAGE,uBAHF,EAINC,OAJM,CAIE,gBAJF,EAIoB,oBAJpB;AAzB8B,CAAX,CAAzB"},"metadata":{},"sourceType":"module"}