{"ast":null,"code":"import { call, put, select } from 'redux-saga/effects';\nimport { chatApi } from 'api/chat-api';\nimport { apiResponsesMessage } from 'data/constants/api';\nimport { sagaActionCreator, sagasConstantsChat } from 'data/constants/saga';\nimport { addChatAction, addChatsAction, addMessageAction, changeChatsStatusAction, deleteChatAction } from 'store/slices/chats-slice';\nimport { changeAuthUserAction } from 'store/slices/user-slice';\nexport function* workerGetChats() {\n  yield put(changeChatsStatusAction('pending'));\n  const response = yield call(chatApi.getChats);\n\n  if (response === apiResponsesMessage.needAuth) {\n    yield put(changeAuthUserAction(false));\n    yield put(changeChatsStatusAction('ready'));\n  } else if (response === apiResponsesMessage.unexpected) {\n    yield put(changeChatsStatusAction('ready'));\n  } else if (typeof response !== 'string') {\n    yield put(addChatsAction(response));\n    yield put(changeChatsStatusAction('ready'));\n  }\n\n  ;\n}\nexport function* workerCreateChat(data) {\n  yield put(changeChatsStatusAction('create'));\n  const {\n    username\n  } = yield select(store => store.userSlice.data);\n  const response = yield call(chatApi.createChat, [username, data.payload.person_username]);\n\n  if (response === apiResponsesMessage.needAuth) {\n    yield put(changeAuthUserAction(false));\n  } else if (response === apiResponsesMessage.unexpected) {\n    yield put(changeChatsStatusAction('ready'));\n    return;\n  } else if (typeof response !== 'string') {\n    yield put(addChatAction(response));\n    data.payload.navigate(`/chat/${response.id}`);\n    yield put(changeChatsStatusAction('ready'));\n  }\n}\nexport function* workerDeleteChat(data) {\n  const response = yield call(chatApi.deleteChat, data.payload);\n\n  if (response === apiResponsesMessage.needAuth) {\n    yield put(changeAuthUserAction(false));\n  } else if (response === apiResponsesMessage.unexpected) {\n    return;\n  } else if (response === apiResponsesMessage.success) {\n    yield put(deleteChatAction(data.payload));\n  }\n}\nexport function* workerCreateMessage(data) {\n  yield put(changeChatsStatusAction('message'));\n  const response = yield call(chatApi.createMessage, data.payload);\n\n  if (response === apiResponsesMessage.needAuth) {\n    yield put(changeAuthUserAction(false));\n  } else if (response === apiResponsesMessage.unexpected) {\n    yield put(changeChatsStatusAction('ready'));\n  } else if (response === apiResponsesMessage.success) {\n    yield put(changeChatsStatusAction('ready'));\n  }\n}\nexport function* workerGetMessage(data) {\n  const response = yield call(chatApi.getMessage, data.payload);\n\n  if (response === apiResponsesMessage.needAuth) {\n    yield put(changeAuthUserAction(false));\n  } else if (response === apiResponsesMessage.unexpected) {\n    return;\n  } else if (response === apiResponsesMessage.requestExpired) {\n    yield put(sagaActionCreator(sagasConstantsChat.SAGA_GET_MESSAGE, data.payload));\n  } else if (typeof response !== 'string') {\n    // добавляем сообщение в чат, и вторым действием создаем опять лонгпуллинг\n    yield put(addMessageAction({\n      chat_id: data.payload.chat_id,\n      message: response\n    }));\n    yield put(sagaActionCreator(sagasConstantsChat.SAGA_GET_MESSAGE, data.payload));\n  }\n}","map":{"version":3,"names":["call","put","select","chatApi","apiResponsesMessage","sagaActionCreator","sagasConstantsChat","addChatAction","addChatsAction","addMessageAction","changeChatsStatusAction","deleteChatAction","changeAuthUserAction","workerGetChats","response","getChats","needAuth","unexpected","workerCreateChat","data","username","store","userSlice","createChat","payload","person_username","navigate","id","workerDeleteChat","deleteChat","success","workerCreateMessage","createMessage","workerGetMessage","getMessage","requestExpired","SAGA_GET_MESSAGE","chat_id","message"],"sources":["E:/Uprojects/Codenk/Social-Network-main/client/src/store/sagas/chats-saga/workers.ts"],"sourcesContent":["import { call, put, select } from 'redux-saga/effects';\n\nimport { chatApi } from 'api/chat-api';\nimport { apiResponsesMessage } from 'data/constants/api';\nimport { sagaActionCreator, sagasConstantsChat } from 'data/constants/saga';\nimport { addChatAction, addChatsAction, addMessageAction, changeChatsStatusAction, deleteChatAction } from 'store/slices/chats-slice';\nimport { changeAuthUserAction } from 'store/slices/user-slice';\nimport { IChat, IMessage } from 'types/common';\nimport { IWorker } from 'types/helpers';\nimport { ICreateChatPayload, ICreateMessagePayload, IGetMessagePayload } from 'types/sagas/chat';\n\nexport function* workerGetChats() {\n   yield put(changeChatsStatusAction('pending'));\n\n   const response: string | IChat[] = yield call<any>(chatApi.getChats);\n\n   if (response === apiResponsesMessage.needAuth) {\n      yield put(changeAuthUserAction(false));\n\n      yield put(changeChatsStatusAction('ready'));\n   } else if (response === apiResponsesMessage.unexpected) {\n      yield put(changeChatsStatusAction('ready'));\n   } else if (typeof (response) !== 'string') {\n      yield put(addChatsAction(response));\n\n      yield put(changeChatsStatusAction('ready'));\n   };\n}\n\nexport function* workerCreateChat(data: IWorker<ICreateChatPayload>) {\n   yield put(changeChatsStatusAction('create'));\n\n   const { username } = yield select(store => store.userSlice.data);\n\n   const response: string | IChat = yield call<any>(chatApi.createChat, [username, data.payload.person_username]);\n\n   if (response === apiResponsesMessage.needAuth) {\n      yield put(changeAuthUserAction(false));\n   } else if (response === apiResponsesMessage.unexpected) {\n      yield put(changeChatsStatusAction('ready'));\n      \n      return;\n   } else if (typeof (response) !== 'string') {\n      yield put(addChatAction(response));\n\n      data.payload.navigate(`/chat/${response.id}`);\n\n      yield put(changeChatsStatusAction('ready'));\n   }\n}\n\nexport function* workerDeleteChat(data: IWorker<number>) {\n\n   const response: string = yield call<any>(chatApi.deleteChat, data.payload);\n\n   if (response === apiResponsesMessage.needAuth) {\n      yield put(changeAuthUserAction(false));\n   } else if (response === apiResponsesMessage.unexpected) {\n      return;\n   } else if (response === apiResponsesMessage.success) {\n      yield put(deleteChatAction(data.payload));\n   }\n}\n\nexport function* workerCreateMessage(data: IWorker<ICreateMessagePayload>) {\n   yield put(changeChatsStatusAction('message'));\n\n   const response: string = yield call<any>(chatApi.createMessage, data.payload);\n\n   if (response === apiResponsesMessage.needAuth) {\n      yield put(changeAuthUserAction(false));\n   } else if (response === apiResponsesMessage.unexpected) {\n      yield put(changeChatsStatusAction('ready'));\n   } else if (response === apiResponsesMessage.success) {\n      yield put(changeChatsStatusAction('ready'));\n   }\n}\n\nexport function* workerGetMessage(data: IWorker<IGetMessagePayload>) {\n   const response: string | IMessage = yield call<any>(chatApi.getMessage, data.payload);\n\n   if (response === apiResponsesMessage.needAuth) {\n      yield put(changeAuthUserAction(false));\n   } else if (response === apiResponsesMessage.unexpected) {\n      return;\n   } else if (response === apiResponsesMessage.requestExpired) {\n      yield put(sagaActionCreator<IGetMessagePayload>(sagasConstantsChat.SAGA_GET_MESSAGE, data.payload));\n   } else if (typeof (response) !== 'string') {\n      // добавляем сообщение в чат, и вторым действием создаем опять лонгпуллинг\n      yield put(addMessageAction({ chat_id: data.payload.chat_id, message: response }));\n\n      yield put(sagaActionCreator<IGetMessagePayload>(sagasConstantsChat.SAGA_GET_MESSAGE, data.payload));\n   }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}