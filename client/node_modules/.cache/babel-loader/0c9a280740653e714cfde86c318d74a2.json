{"ast":null,"code":"import { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { apiResponsesMessage, Urls } from 'data/constants/api';\nimport { defaultToast } from 'data/constants/toast';\nexport const instance = axios.create({\n  baseURL: Urls.server_url,\n  withCredentials: true\n});\nexport const personApi = {\n  getPersonData: async data => {\n    try {\n      const response = await instance.get(`${Urls.person}/${data}`);\n      return response.data.userData;\n    } catch (error) {\n      var _error$response;\n\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        return apiResponsesMessage.needAuth;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  getPersonPosts: async data => {\n    try {\n      const response = await instance.get(`${Urls.person_posts}/${data}`);\n      return response.data.posts;\n    } catch (error) {\n      var _error$response2;\n\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        return apiResponsesMessage.needAuth;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  getPersonFriends: async data => {\n    try {\n      const response = await instance.get(`${Urls.person_friends}/${data}`);\n      return response.data.friends;\n    } catch (error) {\n      var _error$response3;\n\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        return apiResponsesMessage.needAuth;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  getPersonPhotos: async data => {\n    try {\n      const response = await instance.get(`${Urls.person_photos}/${data}`);\n      return response.data.data;\n    } catch (error) {\n      var _error$response4;\n\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n        return apiResponsesMessage.needAuth;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  }\n};","map":{"version":3,"names":["toast","axios","apiResponsesMessage","Urls","defaultToast","instance","create","baseURL","server_url","withCredentials","personApi","getPersonData","data","response","get","person","userData","error","status","needAuth","warn","unexpected","getPersonPosts","person_posts","posts","getPersonFriends","person_friends","friends","getPersonPhotos","person_photos"],"sources":["E:/Uprojects/Codenk/Social-Network-main/client/src/api/person-api/index.ts"],"sourcesContent":["import { toast } from 'react-toastify';\nimport axios from 'axios';\n\nimport { apiResponsesMessage, Urls } from 'data/constants/api';\nimport { defaultToast } from 'data/constants/toast';\nimport { IFriend, IPhoto, IPost, IUserData } from 'types/common';\n\nexport const instance = axios.create({\n   baseURL: Urls.server_url,\n   withCredentials: true,\n});\n\nexport const personApi = {\n   getPersonData: async (data: string): Promise<IUserData | string> => {\n      try {\n         const response = await instance.get<{ message: string, userData: IUserData }>(`${Urls.person}/${data}`);\n\n         return response.data.userData;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return apiResponsesMessage.needAuth;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   getPersonPosts: async (data: string) => {\n      try {\n         const response = await instance.get<{ message: string, posts: IPost[] }>(`${Urls.person_posts}/${data}`);\n\n         return response.data.posts;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return apiResponsesMessage.needAuth;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   getPersonFriends: async (data: string) => {\n      try {\n         const response = await instance.get<{ message: string, friends: IFriend[] }>(`${Urls.person_friends}/${data}`);\n\n         return response.data.friends;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return apiResponsesMessage.needAuth;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   getPersonPhotos: async (data: string) => {\n      try {\n         const response = await instance.get<{ message: string, data: IPhoto[] }>(`${Urls.person_photos}/${data}`);\n\n         return response.data.data;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return apiResponsesMessage.needAuth;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}