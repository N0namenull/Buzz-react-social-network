{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  friends: [],\n  status: 'ready'\n};\nexport const friendsSlice = createSlice({\n  name: 'friends',\n  initialState,\n  reducers: {\n    addFriends(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.friends = payload;\n    },\n\n    addFriend(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      state.friends.push(payload);\n    },\n\n    changeFriendStatus(state, _ref3) {\n      let {\n        payload\n      } = _ref3;\n      state.friends = state.friends.map(elem => {\n        if (elem.username === payload.username) return payload;\n        return elem;\n      });\n    },\n\n    deleteFriend(state, _ref4) {\n      let {\n        payload\n      } = _ref4;\n      state.friends = state.friends.filter(elem => elem.username !== payload);\n    }\n\n  }\n});\nexport const {\n  addFriends,\n  addFriend,\n  changeFriendStatus,\n  deleteFriend\n} = friendsSlice.actions;\nexport default friendsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","friends","status","friendsSlice","name","reducers","addFriends","state","payload","addFriend","push","changeFriendStatus","map","elem","username","deleteFriend","filter","actions","reducer"],"sources":["E:/Uprojects/Codenk/Social-Network-main/client/src/store/slices/friends-slice/index.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport { IFriend } from 'types/common';\n\nimport { IState } from './types';\n\nconst initialState: IState = {\n   friends: [],\n   status: 'ready',\n};\n\nexport const friendsSlice = createSlice({\n   name: 'friends',\n   initialState,\n   reducers: {\n      addFriends(state, { payload }: { payload: IFriend[] }) {\n         state.friends = payload;\n      },\n      addFriend(state, { payload }: { payload: IFriend }) {\n         state.friends.push(payload);\n      },\n      changeFriendStatus(state, { payload }: { payload: IFriend }) {\n         state.friends = state.friends.map(elem => {\n            if (elem.username === payload.username) return payload;\n            \n            return elem;\n         });\n      },\n      deleteFriend(state, { payload }: { payload: string }) {\n         state.friends = state.friends.filter(elem => elem.username !== payload);\n      },\n   },\n});\n\nexport const {\n   addFriends,\n   addFriend,\n   changeFriendStatus,\n   deleteFriend,\n} = friendsSlice.actions;\n\nexport default friendsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAMA,MAAMC,YAAoB,GAAG;EAC1BC,OAAO,EAAE,EADiB;EAE1BC,MAAM,EAAE;AAFkB,CAA7B;AAKA,OAAO,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EACrCK,IAAI,EAAE,SAD+B;EAErCJ,YAFqC;EAGrCK,QAAQ,EAAE;IACPC,UAAU,CAACC,KAAD,QAA6C;MAAA,IAArC;QAAEC;MAAF,CAAqC;MACpDD,KAAK,CAACN,OAAN,GAAgBO,OAAhB;IACF,CAHM;;IAIPC,SAAS,CAACF,KAAD,SAA2C;MAAA,IAAnC;QAAEC;MAAF,CAAmC;MACjDD,KAAK,CAACN,OAAN,CAAcS,IAAd,CAAmBF,OAAnB;IACF,CANM;;IAOPG,kBAAkB,CAACJ,KAAD,SAA2C;MAAA,IAAnC;QAAEC;MAAF,CAAmC;MAC1DD,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,CAAcW,GAAd,CAAkBC,IAAI,IAAI;QACvC,IAAIA,IAAI,CAACC,QAAL,KAAkBN,OAAO,CAACM,QAA9B,EAAwC,OAAON,OAAP;QAExC,OAAOK,IAAP;MACF,CAJe,CAAhB;IAKF,CAbM;;IAcPE,YAAY,CAACR,KAAD,SAA0C;MAAA,IAAlC;QAAEC;MAAF,CAAkC;MACnDD,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,CAAce,MAAd,CAAqBH,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBN,OAA/C,CAAhB;IACF;;EAhBM;AAH2B,CAAD,CAAhC;AAuBP,OAAO,MAAM;EACVF,UADU;EAEVG,SAFU;EAGVE,kBAHU;EAIVI;AAJU,IAKTZ,YAAY,CAACc,OALV;AAOP,eAAed,YAAY,CAACe,OAA5B"},"metadata":{},"sourceType":"module"}