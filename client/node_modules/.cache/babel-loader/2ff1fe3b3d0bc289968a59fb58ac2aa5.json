{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uprojects\\\\Codenk\\\\Diplom\\\\client\\\\src\\\\components\\\\search-page\\\\search\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { userApi } from 'api/search-api/index';\nimport { apiResponsesMessage } from 'data/constants/api';\nimport { useAppDispatch } from 'hooks/redux';\nimport { changeAuthUserAction } from 'store/slices/user-slice';\nimport s from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = _ref => {\n  _s();\n\n  let {\n    setUsers,\n    setIsLoading\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const [field, setField] = useState('');\n\n  const findAllHandler = () => {//TODO: сделать поиск всех пользователей\n  };\n\n  const findOneHandler = async () => {\n    if (!field.trim().length) return;\n    setUsers([]);\n    setIsLoading(true);\n    const response = await userApi.findUser(field);\n\n    if (response === apiResponsesMessage.needAuth) {\n      dispatch(changeAuthUserAction(false));\n    } else if (typeof response !== 'string') {\n      setUsers([response]);\n    }\n\n    setIsLoading(false);\n  };\n\n  const findOneHandlerOnKeyPress = event => {\n    if (event.key === 'Enter') {\n      findOneHandler();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.buttonAll,\n      onClick: findAllHandler,\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: s.field,\n      onChange: e => setField(e.target.value),\n      onKeyDown: findOneHandlerOnKeyPress,\n      value: field,\n      type: \"text\",\n      placeholder: \"Write id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.buttonOne,\n      onClick: findOneHandler,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Search, \"+tuMiFZsX8iyPZ7ufpAcmBYl6Yc=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","userApi","apiResponsesMessage","useAppDispatch","changeAuthUserAction","s","Search","setUsers","setIsLoading","dispatch","field","setField","findAllHandler","findOneHandler","trim","length","response","findUser","needAuth","findOneHandlerOnKeyPress","event","key","wrapper","buttonAll","e","target","value","buttonOne"],"sources":["E:/Uprojects/Codenk/Diplom/client/src/components/search-page/search/index.tsx"],"sourcesContent":["import { FC, KeyboardEvent, useState } from 'react';\n\nimport { userApi } from 'api/search-api/index';\nimport { apiResponsesMessage } from 'data/constants/api';\nimport { useAppDispatch } from 'hooks/redux';\nimport { changeAuthUserAction } from 'store/slices/user-slice';\nimport { ISearchUser } from 'types/common';\n\nimport s from './style.module.scss';\n\ninterface IProps {\n   setUsers: (arg: ISearchUser[]) => void,\n   setIsLoading: (arg: boolean) => void,\n}\n\nexport const Search: FC<IProps> = ({ setUsers, setIsLoading }) => {\n\n   const dispatch = useAppDispatch();\n\n   const [field, setField] = useState('');\n\n   const findAllHandler = () => {\n      //TODO: сделать поиск всех пользователей\n   };\n\n   const findOneHandler = async () => {\n      if (!field.trim().length) return;\n      setUsers([]);\n      setIsLoading(true);\n\n      const response: string | ISearchUser = await userApi.findUser(field);\n\n      if (response === apiResponsesMessage.needAuth) {\n         dispatch(changeAuthUserAction(false));\n      } else if (typeof response !== 'string') {\n         setUsers([response]);\n      }\n      setIsLoading(false);\n   };\n\n   const findOneHandlerOnKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n      if(event.key === 'Enter'){\n         findOneHandler();\n      }\n   };\n\n   return (\n      <div className={ s.wrapper }>\n         <button className={ s.buttonAll } onClick={ findAllHandler }>All</button>\n\n         <input\n            className={ s.field }\n            onChange={ e => setField(e.target.value) }\n            onKeyDown={ findOneHandlerOnKeyPress }\n            value={ field }\n            type=\"text\"\n            placeholder=\"Write id\"\n         />\n\n         <button className={ s.buttonOne } onClick={ findOneHandler }>Search</button>\n      </div>\n   );\n};\n"],"mappings":";;;AAAA,SAA4BA,QAA5B,QAA4C,OAA5C;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAGA,OAAOC,CAAP,MAAc,qBAAd;;AAOA,OAAO,MAAMC,MAAkB,GAAG,QAAgC;EAAA;;EAAA,IAA/B;IAAEC,QAAF;IAAYC;EAAZ,CAA+B;EAE/D,MAAMC,QAAQ,GAAGN,cAAc,EAA/B;EAEA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMY,cAAc,GAAG,MAAM,CAC1B;EACF,CAFD;;EAIA,MAAMC,cAAc,GAAG,YAAY;IAChC,IAAI,CAACH,KAAK,CAACI,IAAN,GAAaC,MAAlB,EAA0B;IAC1BR,QAAQ,CAAC,EAAD,CAAR;IACAC,YAAY,CAAC,IAAD,CAAZ;IAEA,MAAMQ,QAA8B,GAAG,MAAMf,OAAO,CAACgB,QAAR,CAAiBP,KAAjB,CAA7C;;IAEA,IAAIM,QAAQ,KAAKd,mBAAmB,CAACgB,QAArC,EAA+C;MAC5CT,QAAQ,CAACL,oBAAoB,CAAC,KAAD,CAArB,CAAR;IACF,CAFD,MAEO,IAAI,OAAOY,QAAP,KAAoB,QAAxB,EAAkC;MACtCT,QAAQ,CAAC,CAACS,QAAD,CAAD,CAAR;IACF;;IACDR,YAAY,CAAC,KAAD,CAAZ;EACF,CAbD;;EAeA,MAAMW,wBAAwB,GAAIC,KAAD,IAA4C;IAC1E,IAAGA,KAAK,CAACC,GAAN,KAAc,OAAjB,EAAyB;MACtBR,cAAc;IAChB;EACH,CAJD;;EAMA,oBACG;IAAK,SAAS,EAAGR,CAAC,CAACiB,OAAnB;IAAA,wBACG;MAAQ,SAAS,EAAGjB,CAAC,CAACkB,SAAtB;MAAkC,OAAO,EAAGX,cAA5C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,eAGG;MACG,SAAS,EAAGP,CAAC,CAACK,KADjB;MAEG,QAAQ,EAAGc,CAAC,IAAIb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;MAGG,SAAS,EAAGP,wBAHf;MAIG,KAAK,EAAGT,KAJX;MAKG,IAAI,EAAC,MALR;MAMG,WAAW,EAAC;IANf;MAAA;MAAA;MAAA;IAAA,QAHH,eAYG;MAAQ,SAAS,EAAGL,CAAC,CAACsB,SAAtB;MAAkC,OAAO,EAAGd,cAA5C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZH;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAgBF,CA/CM;;GAAMP,M;UAEOH,c;;;KAFPG,M"},"metadata":{},"sourceType":"module"}