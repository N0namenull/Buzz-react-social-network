{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  posts: [],\n  status: 'ready'\n};\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    changePostStatusAction(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.status = payload;\n    },\n\n    addPostsAction(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      // console.log(payload);\n      state.posts = payload;\n    },\n\n    addPostAction(state, _ref3) {\n      let {\n        payload\n      } = _ref3;\n      state.posts.unshift(payload);\n    },\n\n    deletePostAction(state, _ref4) {\n      let {\n        payload\n      } = _ref4;\n      state.posts = state.posts.filter(elem => elem.id !== payload);\n    },\n\n    changeLikePostAction(state, _ref5) {\n      let {\n        payload\n      } = _ref5;\n      state.posts = state.posts.map(elem => {\n        if (elem.id === payload.id) return payload;\n        return elem;\n      });\n    }\n\n  }\n});\nexport const {\n  changePostStatusAction,\n  addPostsAction,\n  addPostAction,\n  deletePostAction,\n  changeLikePostAction\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","posts","status","postsSlice","name","reducers","changePostStatusAction","state","payload","addPostsAction","addPostAction","unshift","deletePostAction","filter","elem","id","changeLikePostAction","map","actions","reducer"],"sources":["E:/Uprojects/Codenk/Social-Network-main/client/src/store/slices/posts-slice/index.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport { IPost } from 'types/common';\n\nimport { IState, StatusType } from './types';\n\nconst initialState: IState = {\n   posts: [],\n   status: 'ready',\n};\n\nexport const postsSlice = createSlice({\n   name: 'posts',\n   initialState,\n   reducers: {\n      changePostStatusAction(state, { payload }: { payload: StatusType }) {\n         state.status = payload;\n      },\n      addPostsAction(state, { payload }: { payload: IPost[] }) {\n      // console.log(payload);\n         state.posts = payload;\n      },\n      addPostAction(state, { payload }: { payload: IPost }) {\n         state.posts.unshift(payload);\n      },\n      deletePostAction(state, { payload }: { payload: number }) {\n         state.posts = state.posts.filter(elem => elem.id !== payload);\n      },\n      changeLikePostAction(state, { payload }: { payload: IPost }) {\n         state.posts = state.posts.map(elem => {\n            if (elem.id === payload.id) return payload;\n            \n            return elem;\n         });\n      },\n   },\n});\n\nexport const {\n   changePostStatusAction,\n   addPostsAction,\n   addPostAction,\n   deletePostAction,\n   changeLikePostAction,\n} = postsSlice.actions;\n\nexport default postsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAMA,MAAMC,YAAoB,GAAG;EAC1BC,KAAK,EAAE,EADmB;EAE1BC,MAAM,EAAE;AAFkB,CAA7B;AAKA,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,OAD6B;EAEnCJ,YAFmC;EAGnCK,QAAQ,EAAE;IACPC,sBAAsB,CAACC,KAAD,QAA8C;MAAA,IAAtC;QAAEC;MAAF,CAAsC;MACjED,KAAK,CAACL,MAAN,GAAeM,OAAf;IACF,CAHM;;IAIPC,cAAc,CAACF,KAAD,SAA2C;MAAA,IAAnC;QAAEC;MAAF,CAAmC;MACzD;MACGD,KAAK,CAACN,KAAN,GAAcO,OAAd;IACF,CAPM;;IAQPE,aAAa,CAACH,KAAD,SAAyC;MAAA,IAAjC;QAAEC;MAAF,CAAiC;MACnDD,KAAK,CAACN,KAAN,CAAYU,OAAZ,CAAoBH,OAApB;IACF,CAVM;;IAWPI,gBAAgB,CAACL,KAAD,SAA0C;MAAA,IAAlC;QAAEC;MAAF,CAAkC;MACvDD,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,CAAYY,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,OAAvC,CAAd;IACF,CAbM;;IAcPQ,oBAAoB,CAACT,KAAD,SAAyC;MAAA,IAAjC;QAAEC;MAAF,CAAiC;MAC1DD,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,CAAYgB,GAAZ,CAAgBH,IAAI,IAAI;QACnC,IAAIA,IAAI,CAACC,EAAL,KAAYP,OAAO,CAACO,EAAxB,EAA4B,OAAOP,OAAP;QAE5B,OAAOM,IAAP;MACF,CAJa,CAAd;IAKF;;EApBM;AAHyB,CAAD,CAA9B;AA2BP,OAAO,MAAM;EACVR,sBADU;EAEVG,cAFU;EAGVC,aAHU;EAIVE,gBAJU;EAKVI;AALU,IAMTb,UAAU,CAACe,OANR;AAQP,eAAef,UAAU,CAACgB,OAA1B"},"metadata":{},"sourceType":"module"}