{"ast":null,"code":"import { call, put, select } from 'redux-saga/effects';\nimport { userApi } from 'api/user-api';\nimport { apiResponsesMessage } from 'data/constants/api';\nimport { addUserDataAction, addUsernameAction, changeAuthUserAction, changeUserStatusAction } from 'store/slices/user-slice';\nexport function* workerCheckAuth() {\n  const response = yield call(userApi.checkAuth);\n\n  if (response === apiResponsesMessage.needAuth) {\n    yield put(changeUserStatusAction('ready'));\n  } else if (response === apiResponsesMessage.unexpected) {\n    yield put(changeUserStatusAction('ready'));\n  } else {\n    yield put(addUsernameAction(response));\n    yield put(changeAuthUserAction(true));\n    yield put(changeUserStatusAction('data'));\n  }\n}\n;\nexport function* workerRegUser(data) {\n  yield put(changeUserStatusAction('auth'));\n  const response = yield call(userApi.regUser, data.payload);\n\n  if (response === apiResponsesMessage.success) {\n    yield put(addUsernameAction(data.payload.username));\n    yield put(changeAuthUserAction(true));\n  }\n\n  yield put(changeUserStatusAction('ready'));\n}\n;\nexport function* workerAuthUser(data) {\n  yield put(changeUserStatusAction('auth'));\n  const response = yield call(userApi.authUser, data.payload);\n\n  if (response === apiResponsesMessage.success) {\n    yield put(addUsernameAction(data.payload.username));\n    yield put(changeAuthUserAction(true));\n  }\n\n  yield put(changeUserStatusAction('ready'));\n}\nexport function* workerLogoutUser() {\n  yield put(changeUserStatusAction('pending'));\n  const response = yield call(userApi.logoutUser);\n\n  if (response === apiResponsesMessage.success) {\n    yield put(changeAuthUserAction(false));\n  }\n\n  yield put(changeUserStatusAction('ready'));\n}\n;\nexport function* workerGetUserData() {\n  const {\n    username\n  } = yield select(store => store.userSlice.data);\n  const response = yield call(userApi.getUserData, username);\n  if (response === apiResponsesMessage.needAuth) yield put(changeAuthUserAction(false));else if (response === apiResponsesMessage.unexpected) return;\n\n  if (typeof response !== 'string') {\n    yield put(addUserDataAction(response));\n  }\n}\n;","map":{"version":3,"names":["call","put","select","userApi","apiResponsesMessage","addUserDataAction","addUsernameAction","changeAuthUserAction","changeUserStatusAction","workerCheckAuth","response","checkAuth","needAuth","unexpected","workerRegUser","data","regUser","payload","success","username","workerAuthUser","authUser","workerLogoutUser","logoutUser","workerGetUserData","store","userSlice","getUserData"],"sources":["E:/Uprojects/Codenk/Social-Network-main/client/src/store/sagas/user-saga/workers.ts"],"sourcesContent":["import { call, put, select } from 'redux-saga/effects';\n\nimport { userApi } from 'api/user-api';\nimport { apiResponsesMessage } from 'data/constants/api';\nimport { addUserDataAction, addUsernameAction, changeAuthUserAction, changeUserStatusAction } from 'store/slices/user-slice';\nimport { IUserData } from 'types/common';\nimport { IWorker } from 'types/helpers';\n\nimport { IAuthFormState } from 'components/auth-page/auth-form/types';\nimport { IRegFormState } from 'components/auth-page/reg-form/types';\n\nexport function* workerCheckAuth() {\n   const response: string = yield call(userApi.checkAuth);\n\n   if (response === apiResponsesMessage.needAuth ) {\n      yield put(changeUserStatusAction('ready'));\n   } else if (response === apiResponsesMessage.unexpected) {\n      yield put(changeUserStatusAction('ready'));\n   } else {\n      yield put(addUsernameAction(response));\n\n      yield put(changeAuthUserAction(true));\n\n      yield put(changeUserStatusAction('data'));\n   }\n};\n\nexport function* workerRegUser(data: IWorker<IRegFormState>) {\n   yield put(changeUserStatusAction('auth'));\n\n   const response: string = yield call<any>(userApi.regUser, data.payload);\n\n   if (response === apiResponsesMessage.success) {\n      yield put(addUsernameAction(data.payload.username));\n      yield put(changeAuthUserAction(true));\n   }\n\n   yield put(changeUserStatusAction('ready'));\n};\n\nexport function* workerAuthUser(data: IWorker<IAuthFormState>) {\n   yield put(changeUserStatusAction('auth'));\n\n   const response: string = yield call<any>(userApi.authUser, data.payload);\n\n   if (response === apiResponsesMessage.success) {\n      yield put(addUsernameAction(data.payload.username));\n      yield put(changeAuthUserAction(true));\n   }\n   yield put(changeUserStatusAction('ready'));\n}\n\nexport function* workerLogoutUser() {\n   yield put(changeUserStatusAction('pending'));\n\n   const response: string = yield call(userApi.logoutUser);\n\n   if (response === apiResponsesMessage.success) {\n      yield put(changeAuthUserAction(false));\n   }\n\n   yield put(changeUserStatusAction('ready'));\n};\n\nexport function* workerGetUserData() {\n   const { username } = yield select(store => store.userSlice.data);\n\n   const response: IUserData | string = yield call(userApi.getUserData, username);\n\n   if (response === apiResponsesMessage.needAuth) yield put(changeAuthUserAction(false));\n   else if (response === apiResponsesMessage.unexpected) return;\n\n   if (typeof (response) !== 'string') {\n      yield put(addUserDataAction(response));\n   }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}