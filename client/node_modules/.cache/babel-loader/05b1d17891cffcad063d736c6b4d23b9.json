{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uprojects\\\\Codenk\\\\Social-Network-main\\\\client\\\\src\\\\components\\\\auth-page\\\\reg-form\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from 'formik';\nimport { sagaActionCreator, sagasConstantsUser } from 'data/constants/saga';\nimport { initialValues } from 'data/registerForm';\nimport { useAppDispatch } from 'hooks/redux';\nimport { validationSchema } from 'utils/forms/register-form';\nimport { transformFile } from 'utils/transform-file';\nimport s from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RegForm = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: async values => {\n      const duplicateObj = { ...values\n      }; // typeguard на то, что в values.file не null и не строка, чтобы передать именно файл\n\n      if (values.file !== null && typeof values.file !== 'string') {\n        const updatedFile = await transformFile(values.file);\n        duplicateObj.file = updatedFile;\n        dispatch(sagaActionCreator(sagasConstantsUser.SAGA_REG_USER, duplicateObj));\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: s.form,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.inputContainer,\n      children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.field,\n        type: \"text\",\n        placeholder: \"Example: sun144\",\n        ...formik.getFieldProps('username')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), formik.errors.username && formik.touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.error,\n        children: formik.errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 68\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.inputContainer,\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.field,\n        type: \"text\",\n        placeholder: \"Example: John\",\n        ...formik.getFieldProps('name')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), formik.errors.name && formik.touched.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.error,\n        children: formik.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.inputContainer,\n      children: [\"Surname\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.field,\n        type: \"text\",\n        placeholder: \"Example: Lingard\",\n        ...formik.getFieldProps('surname')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), formik.errors.surname && formik.touched.surname && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.error,\n        children: formik.errors.surname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 66\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.inputContainer,\n      children: [\"Date of birth\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.field,\n        type: \"date\",\n        min: \"1960-01-01\",\n        max: \"2015-01-01\",\n        ...formik.getFieldProps('birth')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), formik.errors.birth && formik.touched.birth && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.error,\n        children: formik.errors.birth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.inputContainer,\n      children: [\"City\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.field,\n        type: \"text\",\n        placeholder: 'London',\n        ...formik.getFieldProps('city')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), formik.errors.city && formik.touched.city && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.error,\n        children: formik.errors.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${s.photoContainer} ${formik.values.file ? s._active : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: s.photoLabel,\n        children: [\"Photo\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.photoField,\n          type: \"file\",\n          name: \"file\",\n          accept: \"image/jpeg, image/png\",\n          onChange: event => {\n            var _event$target$files;\n\n            return formik.setFieldValue('file', (_event$target$files = event.target.files) !== null && _event$target$files !== void 0 && _event$target$files.length ? event.target.files[0] : '');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), formik.errors.file && formik.touched.file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.error,\n        children: formik.errors.file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.inputContainer,\n      children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.field,\n        type: \"password\",\n        placeholder: \"Example: bend12AW\",\n        ...formik.getFieldProps('password')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), formik.errors.password && formik.touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.error,\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 68\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !formik.dirty || !formik.isValid,\n      className: s.submit,\n      children: \"REGISTRATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n\n_s(RegForm, \"IP/YE30Q66hU4fu5z2mAwBnXXOo=\", false, function () {\n  return [useAppDispatch, useFormik];\n});\n\n_c = RegForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegForm\");","map":{"version":3,"names":["useFormik","sagaActionCreator","sagasConstantsUser","initialValues","useAppDispatch","validationSchema","transformFile","s","RegForm","dispatch","formik","onSubmit","values","duplicateObj","file","updatedFile","SAGA_REG_USER","handleSubmit","form","inputContainer","field","getFieldProps","errors","username","touched","error","name","surname","birth","city","photoContainer","_active","photoLabel","photoField","event","setFieldValue","target","files","length","password","dirty","isValid","submit"],"sources":["E:/Uprojects/Codenk/Social-Network-main/client/src/components/auth-page/reg-form/index.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { useFormik } from 'formik';\n\nimport { sagaActionCreator, sagasConstantsUser } from 'data/constants/saga';\nimport { initialValues } from 'data/registerForm';\nimport { useAppDispatch } from 'hooks/redux';\nimport { validationSchema } from 'utils/forms/register-form';\nimport { transformFile } from 'utils/transform-file';\n\nimport { IRegFormState } from './types';\n\nimport s from './style.module.scss';\n\nexport const RegForm: FC = () => {\n\n   const dispatch = useAppDispatch();\n\n   const formik = useFormik({\n      initialValues,\n      validationSchema,\n      onSubmit: async (values: IRegFormState) => {\n         const duplicateObj = { ...values };\n\n         // typeguard на то, что в values.file не null и не строка, чтобы передать именно файл\n         if (values.file !== null && typeof values.file !== 'string') {\n            const updatedFile: string = await transformFile(values.file);\n\n            duplicateObj.file = updatedFile;\n            dispatch(sagaActionCreator<IRegFormState>(sagasConstantsUser.SAGA_REG_USER, duplicateObj));\n         }\n      },\n   });\n\n   return (\n      <form onSubmit={ formik.handleSubmit } className={ s.form }>\n         <label className={ s.inputContainer }>\n            Username\n            <input\n               className={ s.field }\n               type=\"text\"\n               placeholder=\"Example: sun144\"\n               { ...formik.getFieldProps('username') }\n            />\n\n            { formik.errors.username && formik.touched.username && <div className={ s.error }>{ formik.errors.username }</div> }\n         </label>\n\n         <label className={ s.inputContainer }>\n            Name\n            <input\n               className={ s.field }\n               type=\"text\"\n               placeholder=\"Example: John\"\n               { ...formik.getFieldProps('name') }\n            />\n\n            { formik.errors.name && formik.touched.name && <div className={ s.error }>{ formik.errors.name }</div> }\n         </label>\n\n         <label className={ s.inputContainer }>\n            Surname\n            <input\n               className={ s.field }\n               type=\"text\"\n               placeholder=\"Example: Lingard\"\n               { ...formik.getFieldProps('surname') }\n            />\n\n            { formik.errors.surname && formik.touched.surname && <div className={ s.error }>{ formik.errors.surname }</div> }\n         </label>\n\n         <label className={ s.inputContainer }>\n            Date of birth\n            <input\n               className={ s.field }\n               type=\"date\"\n               min=\"1960-01-01\" max=\"2015-01-01\"\n               { ...formik.getFieldProps('birth') }\n            />\n\n            { formik.errors.birth && formik.touched.birth && <div className={ s.error }>{ formik.errors.birth }</div> }\n         </label>\n\n         <label className={ s.inputContainer }>\n            City\n            <input\n               className={ s.field }\n               type=\"text\"\n               placeholder={ 'London' }\n               { ...formik.getFieldProps('city') }\n            />\n\n            { formik.errors.city && formik.touched.city && <div className={ s.error }>{ formik.errors.city }</div> }\n         </label>\n\n         <div className={ `${s.photoContainer} ${formik.values.file ? s._active : ''}` }>\n            <label className={ s.photoLabel }>\n               Photo\n               <input\n                  className={ s.photoField }\n                  type=\"file\"\n                  name=\"file\"\n                  accept=\"image/jpeg, image/png\"\n                  onChange={ event => formik.setFieldValue('file', event.target.files?.length ? event.target.files[0] : '') }\n               />\n            </label>\n\n            { formik.errors.file && formik.touched.file && <div className={ s.error }>{ formik.errors.file }</div> }\n         </div>\n\n         <label className={ s.inputContainer }>\n            Password\n            <input\n               className={ s.field }\n               type=\"password\"\n               placeholder=\"Example: bend12AW\"\n               { ...formik.getFieldProps('password') }\n            />\n\n            { formik.errors.password && formik.touched.password && <div className={ s.error }>{ formik.errors.password }</div> }\n         </label>\n\n         <button\n            type=\"submit\"\n            disabled={ !formik.dirty || !formik.isValid }\n            className={ s.submit }\n         >\n            REGISTRATION\n         </button>\n      </form>\n   );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}