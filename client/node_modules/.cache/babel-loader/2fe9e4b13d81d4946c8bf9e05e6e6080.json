{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uprojects\\\\Codenk\\\\rogalik\\\\client\\\\src\\\\components\\\\chat-page\\\\write\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLayoutEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { sagaActionCreator, sagasConstantsChat } from 'data/constants/saga';\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\nimport { changeTextareaHeight } from 'utils';\nimport { handleDate } from 'utils/handle-date';\nimport s from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Write = () => {\n  _s();\n\n  const params = useParams();\n  const dispatch = useAppDispatch();\n  const cloneField = useRef(null);\n  const [fieldOverflow, setFieldOverflow] = useState('hidden');\n  const [heightField, setHeightField] = useState(45);\n  const [text, setText] = useState('');\n  const chat = useAppSelector(state => state.chatsSlice.chats.filter(elem => elem.id === Number(params.id))[0]);\n  const {\n    status\n  } = useAppSelector(state => state.chatsSlice);\n\n  const writeHandler = () => {\n    if (!text.trim().trim().length) return;\n    const messageData = {\n      text,\n      date: handleDate(),\n      chat_id: chat.id\n    };\n    dispatch(sagaActionCreator(sagasConstantsChat.SAGA_CREATE_MESSAGE, messageData));\n    setText('');\n  };\n\n  const pressEnterHandler = event => {\n    if (event.key === 'Enter') {\n      // preventDefault() отменяет перенос на другую строку при нажатии на Enter\n      event.preventDefault();\n      writeHandler();\n    }\n\n    ;\n  };\n\n  useLayoutEffect(() => {\n    var _cloneField$current;\n\n    const cloneCurrentHeight = (_cloneField$current = cloneField.current) === null || _cloneField$current === void 0 ? void 0 : _cloneField$current.offsetHeight; // если при ввооде сообщения высота блока-клона становится больше чем textarea, то меняем высоту textarea\n\n    if (cloneCurrentHeight !== undefined && cloneCurrentHeight !== heightField) {\n      changeTextareaHeight(cloneCurrentHeight, setHeightField, setFieldOverflow, 220, 45);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.text,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: `${s.textField} ${fieldOverflow === 'auto' ? s._auto : ''}`,\n        onChange: e => setText(e.target.value),\n        value: text,\n        onKeyDown: pressEnterHandler,\n        placeholder: \"Write something...\",\n        style: {\n          height: heightField + 'px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: cloneField,\n        className: s.textFieldClone,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: writeHandler,\n      className: `${s.send} ${status === 'message' ? s._active : ''}`,\n      disabled: status === 'message' ? true : false,\n      type: \"button\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Write, \"lPcE/R2ExQ+pVbPe2pc6BFtMlzI=\", false, function () {\n  return [useParams, useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = Write;\n\nvar _c;\n\n$RefreshReg$(_c, \"Write\");","map":{"version":3,"names":["useLayoutEffect","useRef","useState","useParams","sagaActionCreator","sagasConstantsChat","useAppDispatch","useAppSelector","changeTextareaHeight","handleDate","s","Write","params","dispatch","cloneField","fieldOverflow","setFieldOverflow","heightField","setHeightField","text","setText","chat","state","chatsSlice","chats","filter","elem","id","Number","status","writeHandler","trim","length","messageData","date","chat_id","SAGA_CREATE_MESSAGE","pressEnterHandler","event","key","preventDefault","cloneCurrentHeight","current","offsetHeight","undefined","wrapper","textField","_auto","e","target","value","height","textFieldClone","send","_active"],"sources":["E:/Uprojects/Codenk/rogalik/client/src/components/chat-page/write/index.tsx"],"sourcesContent":["import { FC, KeyboardEvent, useLayoutEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { sagaActionCreator, sagasConstantsChat } from 'data/constants/saga';\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\nimport { IChat } from 'types/common';\nimport { ICreateMessagePayload } from 'types/sagas/chat';\nimport { changeTextareaHeight } from 'utils';\nimport { handleDate } from 'utils/handle-date';\n\nimport { FieldOverflowType } from './types';\n\nimport s from './style.module.scss';\n\nexport const Write: FC = () => {\n\n   const params = useParams();\n   const dispatch = useAppDispatch();\n   const cloneField = useRef<HTMLDivElement | null>(null);\n\n   const [fieldOverflow, setFieldOverflow] = useState<FieldOverflowType>('hidden');\n   const [heightField, setHeightField] = useState<number>(45);\n   const [text, setText] = useState<string>('');\n\n   const chat: IChat = useAppSelector(state => state.chatsSlice.chats.filter(elem => elem.id === Number(params.id))[0]);\n   const { status } = useAppSelector(state => state.chatsSlice);\n\n   const writeHandler = () => {\n      if (!text.trim().trim().length) return;\n\n      const messageData: ICreateMessagePayload = {\n         text,\n         date: handleDate(),\n         chat_id: chat.id,\n      };\n\n      dispatch(sagaActionCreator<ICreateMessagePayload>(sagasConstantsChat.SAGA_CREATE_MESSAGE, messageData));\n      setText('');\n   };\n\n   const pressEnterHandler = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n      if (event.key === 'Enter') {\n         // preventDefault() отменяет перенос на другую строку при нажатии на Enter\n         event.preventDefault();\n         writeHandler();\n      };\n   };\n\n   useLayoutEffect(() => {\n      const cloneCurrentHeight = cloneField.current?.offsetHeight;\n\n      // если при ввооде сообщения высота блока-клона становится больше чем textarea, то меняем высоту textarea\n      if (cloneCurrentHeight !== undefined && cloneCurrentHeight !== heightField) {\n         changeTextareaHeight(cloneCurrentHeight, setHeightField, setFieldOverflow, 220, 45);\n      }\n   });\n\n   return (\n      <div className={ s.wrapper }>\n         <div className={ s.text }>\n            <textarea\n               className={ `${s.textField} ${fieldOverflow === 'auto' ? s._auto : ''}` }\n               onChange={ e => setText(e.target.value) }\n               value={ text }\n               onKeyDown={ pressEnterHandler }\n               placeholder=\"Write something...\"\n               style={{ height: heightField + 'px' }}\n            >\n            </textarea>\n\n            <div ref={ cloneField } className={ s.textFieldClone }>{ text }</div>\n         </div>\n\n         <button\n            onClick={ writeHandler }\n            className={ `${s.send} ${status === 'message' ? s._active : ''}` }\n            disabled={ status === 'message' ? true : false }\n            type=\"button\">\n            Send\n         </button>\n      </div>\n   );\n};\n"],"mappings":";;;AAAA,SAA4BA,eAA5B,EAA6CC,MAA7C,EAAqDC,QAArD,QAAqE,OAArE;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,qBAAtD;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,aAA/C;AAGA,SAASC,oBAAT,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAIA,OAAOC,CAAP,MAAc,qBAAd;;AAEA,OAAO,MAAMC,KAAS,GAAG,MAAM;EAAA;;EAE5B,MAAMC,MAAM,GAAGT,SAAS,EAAxB;EACA,MAAMU,QAAQ,GAAGP,cAAc,EAA/B;EACA,MAAMQ,UAAU,GAAGb,MAAM,CAAwB,IAAxB,CAAzB;EAEA,MAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAoB,QAApB,CAAlD;EACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAS,EAAT,CAA9C;EACA,MAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAS,EAAT,CAAhC;EAEA,MAAMmB,IAAW,GAAGd,cAAc,CAACe,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBC,KAAjB,CAAuBC,MAAvB,CAA8BC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYC,MAAM,CAAChB,MAAM,CAACe,EAAR,CAAxD,EAAqE,CAArE,CAAV,CAAlC;EACA,MAAM;IAAEE;EAAF,IAAatB,cAAc,CAACe,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAAjC;;EAEA,MAAMO,YAAY,GAAG,MAAM;IACxB,IAAI,CAACX,IAAI,CAACY,IAAL,GAAYA,IAAZ,GAAmBC,MAAxB,EAAgC;IAEhC,MAAMC,WAAkC,GAAG;MACxCd,IADwC;MAExCe,IAAI,EAAEzB,UAAU,EAFwB;MAGxC0B,OAAO,EAAEd,IAAI,CAACM;IAH0B,CAA3C;IAMAd,QAAQ,CAACT,iBAAiB,CAAwBC,kBAAkB,CAAC+B,mBAA3C,EAAgEH,WAAhE,CAAlB,CAAR;IACAb,OAAO,CAAC,EAAD,CAAP;EACF,CAXD;;EAaA,MAAMiB,iBAAiB,GAAIC,KAAD,IAA+C;IACtE,IAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;MACxB;MACAD,KAAK,CAACE,cAAN;MACAV,YAAY;IACd;;IAAA;EACH,CAND;;EAQA9B,eAAe,CAAC,MAAM;IAAA;;IACnB,MAAMyC,kBAAkB,0BAAG3B,UAAU,CAAC4B,OAAd,wDAAG,oBAAoBC,YAA/C,CADmB,CAGnB;;IACA,IAAIF,kBAAkB,KAAKG,SAAvB,IAAoCH,kBAAkB,KAAKxB,WAA/D,EAA4E;MACzET,oBAAoB,CAACiC,kBAAD,EAAqBvB,cAArB,EAAqCF,gBAArC,EAAuD,GAAvD,EAA4D,EAA5D,CAApB;IACF;EACH,CAPc,CAAf;EASA,oBACG;IAAK,SAAS,EAAGN,CAAC,CAACmC,OAAnB;IAAA,wBACG;MAAK,SAAS,EAAGnC,CAAC,CAACS,IAAnB;MAAA,wBACG;QACG,SAAS,EAAI,GAAET,CAAC,CAACoC,SAAU,IAAG/B,aAAa,KAAK,MAAlB,GAA2BL,CAAC,CAACqC,KAA7B,GAAqC,EAAG,EADzE;QAEG,QAAQ,EAAGC,CAAC,IAAI5B,OAAO,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV,CAF1B;QAGG,KAAK,EAAG/B,IAHX;QAIG,SAAS,EAAGkB,iBAJf;QAKG,WAAW,EAAC,oBALf;QAMG,KAAK,EAAE;UAAEc,MAAM,EAAElC,WAAW,GAAG;QAAxB;MANV;QAAA;QAAA;QAAA;MAAA,QADH,eAWG;QAAK,GAAG,EAAGH,UAAX;QAAwB,SAAS,EAAGJ,CAAC,CAAC0C,cAAtC;QAAA,UAAyDjC;MAAzD;QAAA;QAAA;QAAA;MAAA,QAXH;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,eAeG;MACG,OAAO,EAAGW,YADb;MAEG,SAAS,EAAI,GAAEpB,CAAC,CAAC2C,IAAK,IAAGxB,MAAM,KAAK,SAAX,GAAuBnB,CAAC,CAAC4C,OAAzB,GAAmC,EAAG,EAFlE;MAGG,QAAQ,EAAGzB,MAAM,KAAK,SAAX,GAAuB,IAAvB,GAA8B,KAH5C;MAIG,IAAI,EAAC,QAJR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAfH;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAyBF,CApEM;;GAAMlB,K;UAEKR,S,EACEG,c,EAOGC,c,EACDA,c;;;KAXTI,K"},"metadata":{},"sourceType":"module"}