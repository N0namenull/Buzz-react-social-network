{"ast":null,"code":"import { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { apiResponsesMessage, Urls } from 'data/constants/api';\nimport { defaultToast } from 'data/constants/toast';\nexport const instance = axios.create({\n  baseURL: Urls.server_url,\n  withCredentials: true\n});\nexport const userApi = {\n  checkAuth: async () => {\n    try {\n      const response = await instance.get(Urls.userAuth);\n      return response.data.data;\n    } catch (error) {\n      var _error$response;\n\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        return error.response.data.message;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  authUser: async data => {\n    try {\n      const response = await instance.post(Urls.userAuth, { ...data\n      }, {\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        }\n      });\n      toast.success(response.data.message, defaultToast);\n      return apiResponsesMessage.success;\n    } catch (error) {\n      var _error$response2;\n\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        toast.warn(error.response.data.message, defaultToast);\n        return error.response.data.message;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  regUser: async data => {\n    try {\n      const response = await instance.post(Urls.user, { ...data\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      toast.success(response.data.message, defaultToast);\n      return apiResponsesMessage.success;\n    } catch (error) {\n      var _error$response3;\n\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        toast.warn(error.response.data.message, defaultToast);\n        return error.response.data.message;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  logoutUser: async () => {\n    try {\n      await instance.get(Urls.userLogout);\n      return apiResponsesMessage.success;\n    } catch (error) {\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  getUserData: async data => {\n    try {\n      const response = await instance.get(`${Urls.user}/${data}`);\n      return response.data.userData;\n    } catch (error) {\n      var _error$response4;\n\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n        return apiResponsesMessage.needAuth;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  }\n};","map":{"version":3,"names":["toast","axios","apiResponsesMessage","Urls","defaultToast","instance","create","baseURL","server_url","withCredentials","userApi","checkAuth","response","get","userAuth","data","error","status","message","warn","unexpected","authUser","post","headers","success","regUser","user","logoutUser","userLogout","getUserData","userData","needAuth"],"sources":["E:/Uprojects/Codenk/Diplom/client/src/api/user-api/index.ts"],"sourcesContent":["import { toast } from 'react-toastify';\nimport axios from 'axios';\n\nimport { apiResponsesMessage, Urls } from 'data/constants/api';\nimport { defaultToast } from 'data/constants/toast';\nimport { IUserData } from 'types/common';\n\nimport { IRegFormState } from 'components/auth-page/reg-form/types';\n\nexport const instance = axios.create({\n   baseURL: Urls.server_url,\n   withCredentials: true,\n});\n\nexport const userApi = {\n   checkAuth: async (): Promise<string> => {\n      try {\n         const response = await instance.get<{ message: string, data: string }>(Urls.userAuth);\n\n         return response.data.data;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return error.response.data.message;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   authUser: async (data: { username: string, password: string }): Promise<string> => {\n      try {\n         const response = await instance.post<{ message: string }>(Urls.userAuth, { ...data }, {\n            headers: { 'Content-Type': 'application/json;charset=utf-8' },\n         });\n\n         toast.success(response.data.message, defaultToast);\n         \n         return apiResponsesMessage.success;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            toast.warn(error.response.data.message, defaultToast);\n            \n            return error.response.data.message;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   regUser: async (data: IRegFormState): Promise<string> => {\n      try {\n         const response = await instance.post(Urls.user, { ...data }, {\n            headers: { 'Content-Type': 'application/json' },\n         });\n\n         toast.success(response.data.message, defaultToast);\n         \n         return apiResponsesMessage.success;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            toast.warn(error.response.data.message, defaultToast);\n            \n            return error.response.data.message;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   logoutUser: async (): Promise<string> => {\n      try {\n         await instance.get(Urls.userLogout);\n\n         return apiResponsesMessage.success;\n      } catch (error: any) {\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   getUserData: async (data: string): Promise<IUserData | string> => {\n      try {\n         const response = await instance.get<{ message: string, userData: IUserData }>(`${Urls.user}/${data}`);\n\n         return response.data.userData;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return apiResponsesMessage.needAuth;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}