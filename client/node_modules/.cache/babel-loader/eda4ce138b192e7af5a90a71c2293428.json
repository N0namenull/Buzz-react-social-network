{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  status: 'ready',\n  chats: []\n};\nexport const chatsSlice = createSlice({\n  name: 'chats',\n  initialState,\n  reducers: {\n    changeChatsStatusAction(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.status = payload;\n    },\n\n    addChatsAction(state, _ref2) {\n      let {\n        payload\n      } = _ref2;\n      state.chats = payload;\n    },\n\n    addChatAction(state, _ref3) {\n      let {\n        payload\n      } = _ref3;\n      state.chats.push(payload);\n    },\n\n    deleteChatAction(state, _ref4) {\n      let {\n        payload\n      } = _ref4;\n      state.chats = state.chats.filter(elem => elem.id !== payload);\n    },\n\n    addMessageAction(state, _ref5) {\n      let {\n        payload\n      } = _ref5;\n      const chat = state.chats.filter(elem => elem.id === payload.chat_id)[0];\n      chat.messages.push(payload.message);\n    }\n\n  }\n});\nexport const {\n  changeChatsStatusAction,\n  addChatsAction,\n  addChatAction,\n  deleteChatAction,\n  addMessageAction\n} = chatsSlice.actions;\nexport default chatsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","status","chats","chatsSlice","name","reducers","changeChatsStatusAction","state","payload","addChatsAction","addChatAction","push","deleteChatAction","filter","elem","id","addMessageAction","chat","chat_id","messages","message","actions","reducer"],"sources":["E:/Uprojects/Codenk/Diplom/client/src/store/slices/chats-slice/index.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport { IChat } from 'types/common';\n\nimport { ICreateMessagePayload, IState, StatusType } from './types';\n\nconst initialState: IState = {\n   status: 'ready',\n   chats: [],\n};\n\nexport const chatsSlice = createSlice({\n   name: 'chats',\n   initialState,\n   reducers: {\n      changeChatsStatusAction(state, { payload }: { payload: StatusType }) {\n         state.status = payload;\n      },\n      addChatsAction(state, { payload }: { payload: IChat[] }) {\n         state.chats = payload;\n      },\n      addChatAction(state, { payload }: { payload: IChat }) {\n         state.chats.push(payload);\n      },\n      deleteChatAction(state, { payload }: { payload: number }) {\n         state.chats = state.chats.filter(elem => elem.id !== payload);\n      },\n      addMessageAction(state, { payload }: { payload: ICreateMessagePayload }) {\n         const chat = state.chats.filter(elem => elem.id === payload.chat_id)[0];\n         chat.messages.push(payload.message);\n      },\n   },\n});\n\nexport const {\n   changeChatsStatusAction,\n   addChatsAction,\n   addChatAction,\n   deleteChatAction,\n   addMessageAction,\n} = chatsSlice.actions;\n\nexport default chatsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAMA,MAAMC,YAAoB,GAAG;EAC1BC,MAAM,EAAE,OADkB;EAE1BC,KAAK,EAAE;AAFmB,CAA7B;AAKA,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,OAD6B;EAEnCJ,YAFmC;EAGnCK,QAAQ,EAAE;IACPC,uBAAuB,CAACC,KAAD,QAA8C;MAAA,IAAtC;QAAEC;MAAF,CAAsC;MAClED,KAAK,CAACN,MAAN,GAAeO,OAAf;IACF,CAHM;;IAIPC,cAAc,CAACF,KAAD,SAA2C;MAAA,IAAnC;QAAEC;MAAF,CAAmC;MACtDD,KAAK,CAACL,KAAN,GAAcM,OAAd;IACF,CANM;;IAOPE,aAAa,CAACH,KAAD,SAAyC;MAAA,IAAjC;QAAEC;MAAF,CAAiC;MACnDD,KAAK,CAACL,KAAN,CAAYS,IAAZ,CAAiBH,OAAjB;IACF,CATM;;IAUPI,gBAAgB,CAACL,KAAD,SAA0C;MAAA,IAAlC;QAAEC;MAAF,CAAkC;MACvDD,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYW,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,OAAvC,CAAd;IACF,CAZM;;IAaPQ,gBAAgB,CAACT,KAAD,SAAyD;MAAA,IAAjD;QAAEC;MAAF,CAAiD;MACtE,MAAMS,IAAI,GAAGV,KAAK,CAACL,KAAN,CAAYW,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,OAAO,CAACU,OAA/C,EAAwD,CAAxD,CAAb;MACAD,IAAI,CAACE,QAAL,CAAcR,IAAd,CAAmBH,OAAO,CAACY,OAA3B;IACF;;EAhBM;AAHyB,CAAD,CAA9B;AAuBP,OAAO,MAAM;EACVd,uBADU;EAEVG,cAFU;EAGVC,aAHU;EAIVE,gBAJU;EAKVI;AALU,IAMTb,UAAU,CAACkB,OANR;AAQP,eAAelB,UAAU,CAACmB,OAA1B"},"metadata":{},"sourceType":"module"}