{"ast":null,"code":"import { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { apiResponsesMessage, Urls } from 'data/constants/api';\nimport { defaultToast } from 'data/constants/toast';\nexport const instance = axios.create({\n  baseURL: Urls.server_url,\n  withCredentials: true\n});\nexport const postApi = {\n  getPosts: async () => {\n    // const query: string = data.length === 1 ? `?user=${data[0]}` : `?user=${data[0]}&person=${data[1]}`;\n    try {\n      const response = await instance.get(Urls.post);\n      return response.data.posts;\n    } catch (error) {\n      var _error$response;\n\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        return apiResponsesMessage.needAuth;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  createPost: async data => {\n    try {\n      const response = await instance.post(Urls.post, { ...data\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.post;\n    } catch (error) {\n      var _error$response2;\n\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        return error.response.data.message;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  deletePost: async data => {\n    try {\n      await instance.delete(`${Urls.post}/${data}`);\n      return apiResponsesMessage.success;\n    } catch (error) {\n      var _error$response3;\n\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        return error.response.data.message;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  createLike: async data => {\n    try {\n      await instance.post(Urls.like, { ...data\n      }, {\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        }\n      });\n      return apiResponsesMessage.success;\n    } catch (error) {\n      var _error$response4, _error$response5;\n\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n        return error.response.data.message;\n      }\n\n      if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 409) {\n        return error.response.data.message;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  },\n  deleteLike: async data => {\n    try {\n      await instance.delete(Urls.like, {\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        data: { ...data\n        }\n      });\n      return apiResponsesMessage.success;\n    } catch (error) {\n      var _error$response6;\n\n      if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 401) {\n        return error.response.data.message;\n      }\n\n      toast.warn(apiResponsesMessage.unexpected, defaultToast);\n      return apiResponsesMessage.unexpected;\n    }\n  }\n};","map":{"version":3,"names":["toast","axios","apiResponsesMessage","Urls","defaultToast","instance","create","baseURL","server_url","withCredentials","postApi","getPosts","response","get","post","data","posts","error","status","needAuth","warn","unexpected","createPost","headers","message","deletePost","delete","success","createLike","like","deleteLike"],"sources":["E:/Uprojects/Codenk/Diplom/client/src/api/post-api/index.ts"],"sourcesContent":["import { toast } from 'react-toastify';\nimport axios from 'axios';\n\nimport { apiResponsesMessage, Urls } from 'data/constants/api';\nimport { defaultToast } from 'data/constants/toast';\nimport { ILike, IPost } from 'types/common';\n\nimport { INewPostData } from 'components/main-page/new-post/types';\n\nexport const instance = axios.create({\n   baseURL: Urls.server_url,\n   withCredentials: true,\n});\n\nexport const postApi = {\n   getPosts: async () => {\n      // const query: string = data.length === 1 ? `?user=${data[0]}` : `?user=${data[0]}&person=${data[1]}`;\n\n      try {\n         const response = await instance.get<{ message: string, posts: IPost[] }>(Urls.post);\n\n         return response.data.posts;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return apiResponsesMessage.needAuth;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   createPost: async (data: INewPostData) => {\n      try {\n         const response = await instance.post<{ message: string, post: IPost }>(Urls.post, { ...data }, {\n            headers: { 'Content-Type': 'application/json' },\n         });\n\n         return response.data.post;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return error.response.data.message;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   deletePost: async (data: number) => {\n      try {\n         await instance.delete<{ message: string }>(`${Urls.post}/${data}`);\n\n         return apiResponsesMessage.success;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return error.response.data.message;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   createLike: async (data: ILike) => {\n      try {\n         await instance.post(Urls.like, { ...data }, {\n            headers: { 'Content-Type': 'application/json;charset=utf-8' },\n         });\n\n         return apiResponsesMessage.success;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return error.response.data.message;\n         }\n\n         if (error.response?.status === 409) {\n            return error.response.data.message;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n\n   deleteLike: async (data: ILike) => {\n      try {\n         await instance.delete(Urls.like, {\n            headers: { 'Content-Type': 'application/json;charset=utf-8' },\n            data: { ...data },\n         });\n\n         return apiResponsesMessage.success;\n      } catch (error: any) {\n         if (error.response?.status === 401) {\n            return error.response.data.message;\n         }\n\n         toast.warn(apiResponsesMessage.unexpected, defaultToast);\n         \n         return apiResponsesMessage.unexpected;\n      }\n   },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}