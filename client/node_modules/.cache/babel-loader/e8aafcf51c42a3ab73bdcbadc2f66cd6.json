{"ast":null,"code":"import { call, put, select } from 'redux-saga/effects';\nimport { personApi } from 'api/person-api';\nimport { postApi } from 'api/post-api';\nimport { apiResponsesMessage } from 'data/constants/api';\nimport { addFriends, addPersonDataAction, addPersonPostsAction, addPhotos, changePersonLikePostAction } from 'store/slices/person-slice';\nimport { changeAuthUserAction } from 'store/slices/user-slice';\nexport function* workerGetPersonData(data) {\n  const response = yield call(personApi.getPersonData, data.payload);\n  if (response === apiResponsesMessage.needAuth) yield put(changeAuthUserAction(false));else if (response === apiResponsesMessage.unexpected) return;\n\n  if (typeof response !== 'string') {\n    yield put(addPersonDataAction(response));\n  }\n}\n;\nexport function* workerGetPersonPosts(data) {\n  const response = yield call(personApi.getPersonPosts, data.payload);\n  if (response === apiResponsesMessage.needAuth) yield put(changeAuthUserAction(false));else if (response === apiResponsesMessage.unexpected) return;\n\n  if (typeof response !== 'string') {\n    yield put(addPersonPostsAction(response));\n  }\n}\nexport function* workerCreatePersonLikePost(data) {\n  const response = yield call(postApi.createLike, data.payload);\n\n  if (response === apiResponsesMessage.success) {\n    const {\n      posts\n    } = yield select(store => store.personSlice);\n    let currentPost = posts.filter(elem => elem.id === data.payload.postId);\n    currentPost = { ...currentPost[0]\n    };\n    currentPost.isLike = true;\n    currentPost.likes += 1;\n    yield put(changePersonLikePostAction(currentPost));\n  }\n\n  if (response === apiResponsesMessage.needAuth) {\n    yield put(changeAuthUserAction(false));\n  }\n}\n;\nexport function* workerDeletePersonLikePost(data) {\n  const response = yield call(postApi.deleteLike, data.payload);\n\n  if (response === apiResponsesMessage.success) {\n    const {\n      posts\n    } = yield select(store => store.personSlice);\n    let currentPost = posts.filter(elem => elem.id === data.payload.postId);\n    currentPost = { ...currentPost[0]\n    };\n    currentPost.isLike = false;\n    currentPost.likes -= 1;\n    yield put(changePersonLikePostAction(currentPost));\n  }\n\n  if (response === apiResponsesMessage.needAuth) {\n    yield put(changeAuthUserAction(false));\n  }\n}\n;\nexport function* workerGetPersonFriends(data) {\n  const response = yield call(personApi.getPersonFriends, data.payload);\n\n  if (response === apiResponsesMessage.needAuth) {\n    yield put(changeAuthUserAction(false));\n  } else if (response === apiResponsesMessage.unexpected) {\n    return;\n  } else if (typeof response !== 'string') {\n    yield put(addFriends(response));\n  }\n}\n;\nexport function* workerFetchPersonPhotos(data) {\n  const response = yield call(personApi.getPersonPhotos, data.payload);\n\n  if (response === apiResponsesMessage.needAuth) {\n    yield put(changeAuthUserAction(false));\n  } else if (response === apiResponsesMessage.unexpected) {\n    return;\n  } else if (typeof response !== 'string') {\n    yield put(addPhotos(response));\n  }\n}\n;","map":{"version":3,"names":["call","put","select","personApi","postApi","apiResponsesMessage","addFriends","addPersonDataAction","addPersonPostsAction","addPhotos","changePersonLikePostAction","changeAuthUserAction","workerGetPersonData","data","response","getPersonData","payload","needAuth","unexpected","workerGetPersonPosts","getPersonPosts","workerCreatePersonLikePost","createLike","success","posts","store","personSlice","currentPost","filter","elem","id","postId","isLike","likes","workerDeletePersonLikePost","deleteLike","workerGetPersonFriends","getPersonFriends","workerFetchPersonPhotos","getPersonPhotos"],"sources":["E:/Uprojects/Codenk/Social-Network-main/client/src/store/sagas/person-saga/workers.ts"],"sourcesContent":["import { call, put, select } from 'redux-saga/effects';\n\nimport { personApi } from 'api/person-api';\nimport { postApi } from 'api/post-api';\nimport { apiResponsesMessage } from 'data/constants/api';\nimport { addFriends, addPersonDataAction, addPersonPostsAction, addPhotos, changePersonLikePostAction } from 'store/slices/person-slice';\nimport { changeAuthUserAction } from 'store/slices/user-slice';\nimport { IFriend, ILike, IPhoto, IPost, IUserData } from 'types/common';\nimport { IWorker } from 'types/helpers';\n\nexport function* workerGetPersonData(data: IWorker<string>) {\n   const response: IUserData | string = yield call(personApi.getPersonData, data.payload);\n\n   if (response === apiResponsesMessage.needAuth) yield put(changeAuthUserAction(false));\n   else if (response === apiResponsesMessage.unexpected) return;\n\n   if (typeof (response) !== 'string') {\n      yield put(addPersonDataAction(response));\n   }\n};\n\nexport function* workerGetPersonPosts(data: IWorker<string>) {\n   const response: IPost[] | string = yield call(personApi.getPersonPosts, data.payload);\n\n   if (response === apiResponsesMessage.needAuth) yield put(changeAuthUserAction(false));\n   else if (response === apiResponsesMessage.unexpected) return;\n\n   if (typeof (response) !== 'string') {\n      yield put(addPersonPostsAction(response));\n   }\n}\n\nexport function* workerCreatePersonLikePost(data: IWorker<ILike>) {\n   const response: string = yield call(postApi.createLike, data.payload);\n\n   if (response === apiResponsesMessage.success) {\n      const { posts } = yield select(store => store.personSlice);\n\n      let currentPost = posts.filter((elem: IPost) => elem.id === data.payload.postId);\n      currentPost = { ...currentPost[0] };\n      currentPost.isLike = true;\n      currentPost.likes += 1;\n\n      yield put(changePersonLikePostAction(currentPost));\n   }\n\n   if (response === apiResponsesMessage.needAuth) {\n      yield put(changeAuthUserAction(false));\n   }\n};\n\nexport function* workerDeletePersonLikePost(data: IWorker<ILike>) {\n   const response: string = yield call(postApi.deleteLike, data.payload);\n\n   if (response === apiResponsesMessage.success) {\n      const { posts } = yield select(store => store.personSlice);\n\n      let currentPost = posts.filter((elem: IPost) => elem.id === data.payload.postId);\n      currentPost = { ...currentPost[0] };\n      currentPost.isLike = false;\n      currentPost.likes -= 1;\n\n      yield put(changePersonLikePostAction(currentPost));\n   }\n\n   if (response === apiResponsesMessage.needAuth) {\n      yield put(changeAuthUserAction(false));\n   }\n};\n\nexport function* workerGetPersonFriends(data: IWorker<string>) {\n   const response: string | IFriend[] = yield call(personApi.getPersonFriends, data.payload);\n\n   if (response === apiResponsesMessage.needAuth) {\n      yield put(changeAuthUserAction(false));\n   } else if (response === apiResponsesMessage.unexpected) {\n      return;\n   } else if (typeof (response) !== 'string') {\n      yield put(addFriends(response));\n   }\n};\n\nexport function* workerFetchPersonPhotos(data: IWorker<string>) {\n   const response: IPhoto[] | string = yield call(personApi.getPersonPhotos, data.payload);\n\n   if (response === apiResponsesMessage.needAuth) {\n      yield put(changeAuthUserAction(false));\n   } else if (response === apiResponsesMessage.unexpected) {\n      return;\n   } else if (typeof (response) !== 'string') {\n      yield put(addPhotos(response));\n   }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}