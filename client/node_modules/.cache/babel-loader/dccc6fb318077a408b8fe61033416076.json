{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uprojects\\\\Codenk\\\\Social-Network-main\\\\client\\\\src\\\\components\\\\auth-page\\\\auth-form\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { initialValues } from 'data/auth-form';\nimport { sagaActionCreator, sagasConstantsUser } from 'data/constants/saga';\nimport { useAppDispatch } from 'hooks/redux';\nimport { validationSchema } from 'utils/forms/auth-form-validate';\nimport s from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthForm = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n\n  const submitHandler = values => {\n    dispatch(sagaActionCreator(sagasConstantsUser.SAGA_AUTH_USER, values));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: submitHandler,\n    children: _ref => {\n      let {\n        isValid,\n        dirty\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: s.form,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.inputContainer,\n          children: [\"Username\", /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Your username\",\n            className: s.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"p\",\n            name: \"username\",\n            className: s.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: s.inputContainer,\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Your password\",\n            className: s.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"p\",\n            name: \"password\",\n            className: s.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !dirty || !isValid,\n          className: s.submit,\n          children: \"AUTHORIZATION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthForm, \"BJQ1DUn/XFEl2NsQ3DWyHAXfnkY=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","initialValues","sagaActionCreator","sagasConstantsUser","useAppDispatch","validationSchema","s","AuthForm","dispatch","submitHandler","values","SAGA_AUTH_USER","isValid","dirty","form","inputContainer","field","error","submit"],"sources":["E:/Uprojects/Codenk/Social-Network-main/client/src/components/auth-page/auth-form/index.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\n\nimport { initialValues } from 'data/auth-form';\nimport { sagaActionCreator, sagasConstantsUser } from 'data/constants/saga';\nimport { useAppDispatch } from 'hooks/redux';\nimport { validationSchema } from 'utils/forms/auth-form-validate';\n\nimport { IAuthFormState } from './types';\n\nimport s from './style.module.scss';\n\nexport const AuthForm: FC = () => {\n\n   const dispatch = useAppDispatch();\n\n   const submitHandler = (values: IAuthFormState) => {\n      dispatch(sagaActionCreator<IAuthFormState>(sagasConstantsUser.SAGA_AUTH_USER, values));\n   };\n\n   return (\n      <Formik\n         initialValues={ initialValues }\n         validationSchema={ validationSchema }\n         onSubmit={ submitHandler }\n      >\n         { ({ isValid, dirty }) => (\n            <Form className={ s.form }>\n               <label className={ s.inputContainer }>\n                  Username\n                  <Field\n                     type=\"text\"\n                     name=\"username\"\n                     placeholder=\"Your username\"\n                     className={ s.field }\n                  />\n                  <ErrorMessage component=\"p\" name=\"username\" className={ s.error } />\n               </label>\n\n               <label className={ s.inputContainer }>\n                  Password\n                  <Field\n                     type=\"password\"\n                     name=\"password\"\n                     placeholder=\"Your password\"\n                     className={ s.field }\n                  />\n                  <ErrorMessage component=\"p\" name=\"password\" className={ s.error } />\n               </label>\n\n               <button\n                  type=\"submit\"\n                  disabled={ !dirty || !isValid }\n                  className={ s.submit }\n               >\n                  AUTHORIZATION\n               </button>\n            </Form>\n         ) }\n      </Formik>\n   );\n};\n"],"mappings":";;;AACA,SAASA,YAAT,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,QAAlD;AAEA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,qBAAtD;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAIA,OAAOC,CAAP,MAAc,qBAAd;;AAEA,OAAO,MAAMC,QAAY,GAAG,MAAM;EAAA;;EAE/B,MAAMC,QAAQ,GAAGJ,cAAc,EAA/B;;EAEA,MAAMK,aAAa,GAAIC,MAAD,IAA4B;IAC/CF,QAAQ,CAACN,iBAAiB,CAAiBC,kBAAkB,CAACQ,cAApC,EAAoDD,MAApD,CAAlB,CAAR;EACF,CAFD;;EAIA,oBACG,QAAC,MAAD;IACG,aAAa,EAAGT,aADnB;IAEG,gBAAgB,EAAGI,gBAFtB;IAGG,QAAQ,EAAGI,aAHd;IAAA,UAKK;MAAA,IAAC;QAAEG,OAAF;QAAWC;MAAX,CAAD;MAAA,oBACC,QAAC,IAAD;QAAM,SAAS,EAAGP,CAAC,CAACQ,IAApB;QAAA,wBACG;UAAO,SAAS,EAAGR,CAAC,CAACS,cAArB;UAAA,oCAEG,QAAC,KAAD;YACG,IAAI,EAAC,MADR;YAEG,IAAI,EAAC,UAFR;YAGG,WAAW,EAAC,eAHf;YAIG,SAAS,EAAGT,CAAC,CAACU;UAJjB;YAAA;YAAA;YAAA;UAAA,QAFH,eAQG,QAAC,YAAD;YAAc,SAAS,EAAC,GAAxB;YAA4B,IAAI,EAAC,UAAjC;YAA4C,SAAS,EAAGV,CAAC,CAACW;UAA1D;YAAA;YAAA;YAAA;UAAA,QARH;QAAA;UAAA;UAAA;UAAA;QAAA,QADH,eAYG;UAAO,SAAS,EAAGX,CAAC,CAACS,cAArB;UAAA,oCAEG,QAAC,KAAD;YACG,IAAI,EAAC,UADR;YAEG,IAAI,EAAC,UAFR;YAGG,WAAW,EAAC,eAHf;YAIG,SAAS,EAAGT,CAAC,CAACU;UAJjB;YAAA;YAAA;YAAA;UAAA,QAFH,eAQG,QAAC,YAAD;YAAc,SAAS,EAAC,GAAxB;YAA4B,IAAI,EAAC,UAAjC;YAA4C,SAAS,EAAGV,CAAC,CAACW;UAA1D;YAAA;YAAA;YAAA;UAAA,QARH;QAAA;UAAA;UAAA;UAAA;QAAA,QAZH,eAuBG;UACG,IAAI,EAAC,QADR;UAEG,QAAQ,EAAG,CAACJ,KAAD,IAAU,CAACD,OAFzB;UAGG,SAAS,EAAGN,CAAC,CAACY,MAHjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAvBH;MAAA;QAAA;QAAA;QAAA;MAAA,QADD;IAAA;EALL;IAAA;IAAA;IAAA;EAAA,QADH;AAyCF,CAjDM;;GAAMX,Q;UAEOH,c;;;KAFPG,Q"},"metadata":{},"sourceType":"module"}