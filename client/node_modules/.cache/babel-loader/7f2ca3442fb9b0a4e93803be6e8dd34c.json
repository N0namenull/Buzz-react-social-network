{"ast":null,"code":"import { all, call, spawn } from 'redux-saga/effects';\nimport { watcherCreateChat, watcherCreateMessage, watcherDeleteChat, watcherGetChats, watcherGetMessage } from './chats-saga/watchers';\nimport { watcherAllPersonParams, watcherAllUserParams } from './common-saga/watchers';\nimport { watcherAcceptFriend, watcherCreateFriend, watcherDeleteFriend, watcherGetFriends } from './friends-saga/watchers';\nimport { watcherCreatePostLike, watcherDeletePostLike, watcherGetPersonData, watcherGetPersonFriends, watcherGetPersonPhotos, watcherGetPersonPosts } from './person-saga/watchers';\nimport { watcherAddPhoto, watcherDeletePhoto, watcherGetPhotos } from './photo-saga/watchers';\nimport { watcherCreateLike, watcherCreatePost, watcherDeleteLike, watcherDeletePost, watcherGetUserPosts } from './post-saga/watchers';\nimport { watcherAuthUser, watcherCheckAuth, watcherGetUserData, watcherLogoutUser, watcherRegUser } from './user-saga/watchers';\nconst userSagas = [watcherGetUserData, watcherCheckAuth, watcherAuthUser, watcherLogoutUser, watcherRegUser];\nconst postsSagas = [watcherGetUserPosts, watcherCreatePost, watcherCreateLike, watcherDeletePost, watcherDeleteLike];\nconst personSagas = [watcherGetPersonData, watcherGetPersonPosts, watcherCreatePostLike, watcherDeletePostLike, watcherGetPersonFriends, watcherGetPersonPhotos];\nconst friendSagas = [watcherGetFriends, watcherCreateFriend, watcherAcceptFriend, watcherDeleteFriend];\nconst chatSagas = [watcherGetChats, watcherCreateChat, watcherDeleteChat, watcherCreateMessage, watcherGetMessage];\nconst photoSagas = [watcherAddPhoto, watcherGetPhotos, watcherDeletePhoto];\nconst commonSagas = [watcherAllUserParams, watcherAllPersonParams];\nexport default function* rootSaga() {\n  const sagas = [...userSagas, ...postsSagas, ...personSagas, ...friendSagas, ...chatSagas, ...photoSagas, ...commonSagas];\n  const retrySagas = yield sagas.map(saga => {\n    // если сага возвращает ошибку, то её вызывает еще раз.\n    return spawn(function* startSagas() {\n      while (true) {\n        try {\n          yield call(saga); // если в catch не сделать break/исправить вызов саги, то может быть бесконечный цикл вызова\n        } catch (e) {\n          break;\n        }\n      }\n    });\n  });\n  yield all(retrySagas);\n} // TODO: попробовать реализацию через массовый импорт import * from ....","map":{"version":3,"names":["all","call","spawn","watcherCreateChat","watcherCreateMessage","watcherDeleteChat","watcherGetChats","watcherGetMessage","watcherAllPersonParams","watcherAllUserParams","watcherAcceptFriend","watcherCreateFriend","watcherDeleteFriend","watcherGetFriends","watcherCreatePostLike","watcherDeletePostLike","watcherGetPersonData","watcherGetPersonFriends","watcherGetPersonPhotos","watcherGetPersonPosts","watcherAddPhoto","watcherDeletePhoto","watcherGetPhotos","watcherCreateLike","watcherCreatePost","watcherDeleteLike","watcherDeletePost","watcherGetUserPosts","watcherAuthUser","watcherCheckAuth","watcherGetUserData","watcherLogoutUser","watcherRegUser","userSagas","postsSagas","personSagas","friendSagas","chatSagas","photoSagas","commonSagas","rootSaga","sagas","retrySagas","map","saga","startSagas","e"],"sources":["E:/Uprojects/Codenk/rogalik/client/src/store/sagas/root-saga.ts"],"sourcesContent":["import { all, call, spawn } from 'redux-saga/effects';\n\nimport { watcherCreateChat, watcherCreateMessage, watcherDeleteChat, watcherGetChats, watcherGetMessage } from './chats-saga/watchers';\nimport { watcherAllPersonParams, watcherAllUserParams } from './common-saga/watchers';\nimport { watcherAcceptFriend, watcherCreateFriend, watcherDeleteFriend, watcherGetFriends } from './friends-saga/watchers';\nimport { watcherCreatePostLike, watcherDeletePostLike, watcherGetPersonData, watcherGetPersonFriends, watcherGetPersonPhotos, watcherGetPersonPosts } from './person-saga/watchers';\nimport { watcherAddPhoto, watcherDeletePhoto, watcherGetPhotos } from './photo-saga/watchers';\nimport { watcherCreateLike, watcherCreatePost, watcherDeleteLike, watcherDeletePost, watcherGetUserPosts } from './post-saga/watchers';\nimport { watcherAuthUser, watcherCheckAuth, watcherGetUserData, watcherLogoutUser, watcherRegUser } from './user-saga/watchers';\n\nconst userSagas = [watcherGetUserData, watcherCheckAuth, watcherAuthUser, watcherLogoutUser, watcherRegUser];\nconst postsSagas = [watcherGetUserPosts, watcherCreatePost, watcherCreateLike, watcherDeletePost, watcherDeleteLike];\nconst personSagas = [\n   watcherGetPersonData,\n   watcherGetPersonPosts,\n   watcherCreatePostLike,\n   watcherDeletePostLike,\n   watcherGetPersonFriends,\n   watcherGetPersonPhotos,\n];\nconst friendSagas = [watcherGetFriends, watcherCreateFriend, watcherAcceptFriend, watcherDeleteFriend];\nconst chatSagas = [watcherGetChats, watcherCreateChat, watcherDeleteChat, watcherCreateMessage, watcherGetMessage];\nconst photoSagas = [watcherAddPhoto, watcherGetPhotos, watcherDeletePhoto];\nconst commonSagas = [watcherAllUserParams, watcherAllPersonParams];\n\nexport default function* rootSaga(): any {\n\n   const sagas = [\n      ...userSagas,\n      ...postsSagas,\n      ...personSagas,\n      ...friendSagas,\n      ...chatSagas,\n      ...photoSagas,\n      ...commonSagas,\n   ];\n\n   const retrySagas = yield sagas.map(saga => {\n      // если сага возвращает ошибку, то её вызывает еще раз.\n      return spawn(function* startSagas() {\n         while (true) {\n            try {\n               yield call(saga);\n               // если в catch не сделать break/исправить вызов саги, то может быть бесконечный цикл вызова\n            } catch (e) {\n               break;\n            }\n         }\n      });\n   });\n\n   yield all(retrySagas);\n}\n// TODO: попробовать реализацию через массовый импорт import * from ....\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,KAApB,QAAiC,oBAAjC;AAEA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,iBAAlD,EAAqEC,eAArE,EAAsFC,iBAAtF,QAA+G,uBAA/G;AACA,SAASC,sBAAT,EAAiCC,oBAAjC,QAA6D,wBAA7D;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,EAAwEC,iBAAxE,QAAiG,yBAAjG;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,EAAuDC,oBAAvD,EAA6EC,uBAA7E,EAAsGC,sBAAtG,EAA8HC,qBAA9H,QAA2J,wBAA3J;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,gBAA9C,QAAsE,uBAAtE;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,iBAA/C,EAAkEC,iBAAlE,EAAqFC,mBAArF,QAAgH,sBAAhH;AACA,SAASC,eAAT,EAA0BC,gBAA1B,EAA4CC,kBAA5C,EAAgEC,iBAAhE,EAAmFC,cAAnF,QAAyG,sBAAzG;AAEA,MAAMC,SAAS,GAAG,CAACH,kBAAD,EAAqBD,gBAArB,EAAuCD,eAAvC,EAAwDG,iBAAxD,EAA2EC,cAA3E,CAAlB;AACA,MAAME,UAAU,GAAG,CAACP,mBAAD,EAAsBH,iBAAtB,EAAyCD,iBAAzC,EAA4DG,iBAA5D,EAA+ED,iBAA/E,CAAnB;AACA,MAAMU,WAAW,GAAG,CACjBnB,oBADiB,EAEjBG,qBAFiB,EAGjBL,qBAHiB,EAIjBC,qBAJiB,EAKjBE,uBALiB,EAMjBC,sBANiB,CAApB;AAQA,MAAMkB,WAAW,GAAG,CAACvB,iBAAD,EAAoBF,mBAApB,EAAyCD,mBAAzC,EAA8DE,mBAA9D,CAApB;AACA,MAAMyB,SAAS,GAAG,CAAC/B,eAAD,EAAkBH,iBAAlB,EAAqCE,iBAArC,EAAwDD,oBAAxD,EAA8EG,iBAA9E,CAAlB;AACA,MAAM+B,UAAU,GAAG,CAAClB,eAAD,EAAkBE,gBAAlB,EAAoCD,kBAApC,CAAnB;AACA,MAAMkB,WAAW,GAAG,CAAC9B,oBAAD,EAAuBD,sBAAvB,CAApB;AAEA,eAAe,UAAUgC,QAAV,GAA0B;EAEtC,MAAMC,KAAK,GAAG,CACX,GAAGR,SADQ,EAEX,GAAGC,UAFQ,EAGX,GAAGC,WAHQ,EAIX,GAAGC,WAJQ,EAKX,GAAGC,SALQ,EAMX,GAAGC,UANQ,EAOX,GAAGC,WAPQ,CAAd;EAUA,MAAMG,UAAU,GAAG,MAAMD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAI;IACxC;IACA,OAAO1C,KAAK,CAAC,UAAU2C,UAAV,GAAuB;MACjC,OAAO,IAAP,EAAa;QACV,IAAI;UACD,MAAM5C,IAAI,CAAC2C,IAAD,CAAV,CADC,CAED;QACF,CAHD,CAGE,OAAOE,CAAP,EAAU;UACT;QACF;MACH;IACH,CATW,CAAZ;EAUF,CAZwB,CAAzB;EAcA,MAAM9C,GAAG,CAAC0C,UAAD,CAAT;AACF,C,CACD"},"metadata":{},"sourceType":"module"}